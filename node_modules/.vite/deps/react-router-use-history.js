import {
  Router,
  dist_exports
} from "./chunk-2WKZ7EON.js";
import "./chunk-X3B7SAOS.js";
import {
  require_react
} from "./chunk-RDZYK52F.js";
import {
  __commonJS,
  __toESM
} from "./chunk-5WWUZCGV.js";

// node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js
var require_use_sync_external_store_shim_development = __commonJS({
  "node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var React = require_react();
        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        function is(x, y2) {
          return x === y2 && (x !== 0 || 1 / x === 1 / y2) || x !== x && y2 !== y2;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var useState = React.useState, useEffect = React.useEffect, useLayoutEffect = React.useLayoutEffect, useDebugValue = React.useDebugValue;
        var didWarnOld18Alpha = false;
        var didWarnUncachedGetSnapshot = false;
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          {
            if (!didWarnOld18Alpha) {
              if (React.startTransition !== void 0) {
                didWarnOld18Alpha = true;
                error("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.");
              }
            }
          }
          var value = getSnapshot();
          {
            if (!didWarnUncachedGetSnapshot) {
              var cachedValue = getSnapshot();
              if (!objectIs(value, cachedValue)) {
                error("The result of getSnapshot should be cached to avoid an infinite loop");
                didWarnUncachedGetSnapshot = true;
              }
            }
          }
          var _useState = useState({
            inst: {
              value,
              getSnapshot
            }
          }), inst = _useState[0].inst, forceUpdate = _useState[1];
          useLayoutEffect(function() {
            inst.value = value;
            inst.getSnapshot = getSnapshot;
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
          }, [subscribe, value, getSnapshot]);
          useEffect(function() {
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
            var handleStoreChange = function() {
              if (checkIfSnapshotChanged(inst)) {
                forceUpdate({
                  inst
                });
              }
            };
            return subscribe(handleStoreChange);
          }, [subscribe]);
          useDebugValue(value);
          return value;
        }
        function checkIfSnapshotChanged(inst) {
          var latestGetSnapshot = inst.getSnapshot;
          var prevValue = inst.value;
          try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
          } catch (error2) {
            return true;
          }
        }
        function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {
          return getSnapshot();
        }
        var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
        var isServerEnvironment = !canUseDOM;
        var shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;
        var useSyncExternalStore$2 = React.useSyncExternalStore !== void 0 ? React.useSyncExternalStore : shim;
        exports.useSyncExternalStore = useSyncExternalStore$2;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/use-sync-external-store/shim/index.js
var require_shim = __commonJS({
  "node_modules/use-sync-external-store/shim/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_use_sync_external_store_shim_development();
    }
  }
});

// node_modules/react-router-use-history/dist/index.esm.js
var import_react = __toESM(require_react());
var import_shim = __toESM(require_shim());
function s() {
  return s = Object.assign ? Object.assign.bind() : function(t2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var r2 = arguments[e2];
      for (var n2 in r2)
        Object.prototype.hasOwnProperty.call(r2, n2) && (t2[n2] = r2[n2]);
    }
    return t2;
  }, s.apply(this, arguments);
}
var u;
var h;
function f(t2, e2) {
  return { usr: t2.state, key: t2.key, idx: e2 };
}
function p(t2, e2, r2, n2) {
  return void 0 === r2 && (r2 = null), s({ pathname: "string" == typeof t2 ? t2 : t2.pathname, search: "", hash: "" }, "string" == typeof e2 ? function(t3) {
    let e3 = {};
    if (t3) {
      let r3 = t3.indexOf("#");
      r3 >= 0 && (e3.hash = t3.substr(r3), t3 = t3.substr(0, r3));
      let n3 = t3.indexOf("?");
      n3 >= 0 && (e3.search = t3.substr(n3), t3 = t3.substr(0, n3)), t3 && (e3.pathname = t3);
    }
    return e3;
  }(e2) : e2, { state: r2, key: e2 && e2.key || n2 || Math.random().toString(36).substr(2, 8) });
}
function d(t2) {
  let { pathname: e2 = "/", search: r2 = "", hash: n2 = "" } = t2;
  return r2 && "?" !== r2 && (e2 += "?" === r2.charAt(0) ? r2 : "?" + r2), n2 && "#" !== n2 && (e2 += "#" === n2.charAt(0) ? n2 : "#" + n2), e2;
}
!function(t2) {
  t2.Pop = "POP", t2.Push = "PUSH", t2.Replace = "REPLACE";
}(u || (u = {})), function(t2) {
  t2.data = "data", t2.deferred = "deferred", t2.redirect = "redirect", t2.error = "error";
}(h || (h = {}));
var v = (0, import_react.createContext)(null);
function m({ basename: e2, children: a2, window: i, history: l2 }) {
  const h2 = (0, import_react.useRef)(/* @__PURE__ */ new Set());
  let m2 = (0, import_react.useRef)(null);
  var y2;
  null == m2.current && (m2.current = l2 || (void 0 === (y2 = { window: i, v5Compat: true }) && (y2 = {}), function(t2, e3, r2, n2) {
    void 0 === n2 && (n2 = {});
    let { window: o2 = document.defaultView, v5Compat: a3 = false } = n2, i2 = o2.history, c = u.Pop, l3 = null, h3 = v2();
    function v2() {
      return (i2.state || { idx: null }).idx;
    }
    function m3() {
      c = u.Pop;
      let t3 = v2(), e4 = null == t3 ? null : t3 - h3;
      h3 = t3, l3 && l3({ action: c, location: g3.location, delta: e4 });
    }
    function y3(t3) {
      let e4 = "null" !== o2.location.origin ? o2.location.origin : o2.location.href, r3 = "string" == typeof t3 ? t3 : d(t3);
      return function(t4, e5) {
        if (false === t4 || null == t4)
          throw new Error(e5);
      }(e4, "No window.location.(origin|href) available to create URL for href: " + r3), new URL(r3, e4);
    }
    null == h3 && (h3 = 0, i2.replaceState(s({}, i2.state, { idx: h3 }), ""));
    let g3 = { get action() {
      return c;
    }, get location() {
      return function(t3, e4) {
        let { pathname: r3, search: n3, hash: o3 } = t3.location;
        return p("", { pathname: r3, search: n3, hash: o3 }, e4.state && e4.state.usr || null, e4.state && e4.state.key || "default");
      }(o2, i2);
    }, listen(t3) {
      if (l3)
        throw new Error("A history only accepts one active listener");
      return o2.addEventListener("popstate", m3), l3 = t3, () => {
        o2.removeEventListener("popstate", m3), l3 = null;
      };
    }, createHref: (t3) => function(t4, e4) {
      return "string" == typeof e4 ? e4 : d(e4);
    }(0, t3), createURL: y3, encodeLocation(t3) {
      let e4 = y3(t3);
      return { pathname: e4.pathname, search: e4.search, hash: e4.hash };
    }, push: function(t3, e4) {
      c = u.Push;
      let r3 = p(g3.location, t3, e4);
      h3 = v2() + 1;
      let n3 = f(r3, h3), s2 = g3.createHref(r3);
      try {
        i2.pushState(n3, "", s2);
      } catch (t4) {
        if (t4 instanceof DOMException && "DataCloneError" === t4.name)
          throw t4;
        o2.location.assign(s2);
      }
      a3 && l3 && l3({ action: c, location: g3.location, delta: 1 });
    }, replace: function(t3, e4) {
      c = u.Replace;
      let r3 = p(g3.location, t3, e4);
      h3 = v2();
      let n3 = f(r3, h3), o3 = g3.createHref(r3);
      i2.replaceState(n3, "", o3), a3 && l3 && l3({ action: c, location: g3.location, delta: 0 });
    }, go: (t3) => i2.go(t3) };
    return g3;
  }(0, 0, 0, y2)));
  let g2 = m2.current, [w2, E2] = (0, import_react.useState)({ action: g2.action, location: g2.location });
  return (0, import_react.useLayoutEffect)(() => g2.listen((t2) => {
    h2.current.forEach((e3) => e3(t2)), E2(t2);
  }), [g2]), import_react.default.createElement(v.Provider, { value: { ref: h2 } }, import_react.default.createElement(Router, { basename: e2, children: a2, location: w2.location, navigationType: w2.action, navigator: g2 }));
}
function y() {
  return y = Object.assign ? Object.assign.bind() : function(t2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var r2 = arguments[e2];
      for (var n2 in r2)
        Object.prototype.hasOwnProperty.call(r2, n2) && (t2[n2] = r2[n2]);
    }
    return t2;
  }, y.apply(this, arguments);
}
var g = "UNSAFE_".concat("DataRouterContext");
var w = "UNSAFE_".concat("NavigationContext");
var E = () => {
  if (!(w in dist_exports) && true)
    throw new Error("[react-router-use-history]: only support react-router-dom >= 6");
  const t2 = (0, import_react.useContext)(dist_exports[w]).navigator, e2 = (0, import_react.useContext)(v);
  return y({}, t2, { listen: (t3) => {
    if (!e2 && true)
      throw new Error("[react-router-use-history]: You should use import { BrowserRouter } from 'react-router-use-history', otherwise 'history.listen' will not working.");
    return null == e2 || e2.ref.current.add(t3), () => {
      null == e2 || e2.ref.current.delete(t3);
    };
  } });
};
var b = () => {
  if (g in dist_exports) {
    const r2 = (0, import_react.useContext)(dist_exports[g]);
    if (r2) {
      var t2, e2;
      const n2 = null == r2 || null == (t2 = r2.router) ? void 0 : t2.state;
      return y({ get location() {
        return null == n2 ? void 0 : n2.location;
      }, get action() {
        return null == n2 ? void 0 : n2.historyAction;
      }, listen: null == r2 || null == (e2 = r2.router) ? void 0 : e2.subscribe }, null == r2 ? void 0 : r2.navigator);
    }
  }
  return E();
};
var O = (t2) => {
  const e2 = b();
  return (0, import_shim.useSyncExternalStore)(e2.listen, () => t2(e2));
};
export {
  m as BrowserRouter,
  v as UNSAFE_SubscriptionContext,
  E as useBrowserRouterHistory,
  b as useHistory,
  O as useHistorySelector
};
/*! Bundled license information:

use-sync-external-store/cjs/use-sync-external-store-shim.development.js:
  (**
   * @license React
   * use-sync-external-store-shim.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=react-router-use-history.js.map
